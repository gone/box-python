name: python-nodejs
version: 0.0.6
inherits: ruudk/ubuntu14.04@1.0.0
type : main
platform : ubuntu@14.04
description : python box with updated nodejs
keywords:
  - python
  - nodejs
  - npm
  - virtualenv
  - python 2.7
  - python 3.4
  - wheel
  - ruby
  - bundler
packages :
  - python@2.7.3
  - python@3.4.3
  - setuptools@1.3
  - pip@1.5.4
  - virtualenv@1.11.4
  - wheel@0.22.0
  - psycopg2
  - ruby@2.0.0-p353
script : |
  sudo apt-get update
  sudo apt-get remove python-virtualenv python-setuptools
  sudo apt-get install python-dev python3 python3-dev python3-psycopg2 python-psycopg2
  sudo apt-get install postgis
  wget https://bitbucket.org/pypa/setuptools/raw/bootstrap/ez_setup.py
  sudo python3 ez_setup.py
  sudo python2 ez_setup.py


  export RUBYVERSION=2.0.0-p353
  sudo apt-get install git zlib1g-dev libreadline-dev libqtwebkit-dev
  sudo apt-get remove ruby1.9.1
  cd $HOME
  mkdir rubyinstall
  cd rubyinstall
  wget ftp://ftp.ruby-lang.org/pub/ruby/2.0/ruby-$RUBYVERSION.tar.gz
  tar xzvf ruby-$RUBYVERSION.tar.gz
  cd ruby-$RUBYVERSION
  ./configure --with-readline-dir=/usr/include/readline --with-openssl-dir=/usr/include/openssl
  make
  make test
  sudo make install
  cd $HOME
  rm -fr rubyinstall
  echo "gem: --no-rdoc --no-ri" >> $HOME/.gemrc
  sudo gem install bundler -v "1.3"
  echo "RAILS_ENV=test" | sudo tee -a /etc/environment
  echo "RACK_ENV=test" | sudo tee -a /etc/environment
  sudo mv /usr/local/bin/rake /usr/local/bin/rake.back
  wget https://opscode-omnibus-packages.s3.amazonaws.com/ubuntu/12.04/x86_64/chefdk_0.3.6-1_amd64.deb
  sudo dpkg -i chefdk_0.3.6-1_amd64.deb
  cd $WERCKER_ROOT
  berks vendor
  sudo chef-solo -c $WERCKER_SOURCE_DIR/solo.rb -j $WERCKER_SOURCE_DIR/solo.json -l debug


  cd /tmp/
  wget https://raw.github.com/pypa/pip/master/contrib/get-pip.py
  sudo python get-pip.py
  pip --version
  sudo cp /usr/local/bin/pip /usr/local/bin/pip-2.7
  sudo rm -rf /usr/local/bin/pip
  sudo python3 get-pip.py
  sudo cp /usr/local/bin/pip /usr/local/bin/pip-3.4
  sudo cp /usr/local/bin/pip-2.7 /usr/local/bin/pip
  pip --version

  sudo pip-3.4 install virtualenv wheel --upgrade
  sudo pip-2.7 install virtualenv wheel --upgrade


  pip-3.4 --version
  pip-2.7 --version
  pip --version

  sudo chef-solo -c $WERCKER_SOURCE_DIR/solo.rb -j $WERCKER_SOURCE_DIR/solo.json -l debug

  export NODEVERSION=0.10.26
  cd $HOME
  mkdir nodeinstall
  cd nodeinstall
  wget http://nodejs.org/dist/v$NODEVERSION/node-v$NODEVERSION.tar.gz
  tar xzvf node-v$NODEVERSION.tar.gz
  cd node-v$NODEVERSION
  ./configure
  make
  sudo make install
  cd $HOME
  rm -fr nodeinstall
  node -v
  sudo npm install -g ember-cli phantom testem bower phantomjs


box-detect:
  priority : 900
  version :
  detect:
    - files:
      - requirements.txt
    - files:
      - setup.py

default-build:
  python:
    priority : 50
    detect:
      - default: true
    text-to-append: |
      # Build definition
      build:
        # The steps that will be executed on build
        steps:
          # A step that sets up the python virtual environment
          - virtualenv:
              name: setup virtual environment
              install_wheel: false # Enable wheel to speed up builds (experimental)

          # # Use this virtualenv step for python 3.2
          # - virtualenv
          #     name: setup virtual environment
          #     python_location: /usr/bin/python3.2

          # A step that executes `pip install` command.
          - pip-install

          # # This pip-install clears the local wheel cache
          # - pip-install:
          #     clean_wheel_dir: true

          # A custom script step, name value is used in the UI
          # and the code value contains the command that get executed
          - script:
              name: echo python information
              code: |
                echo "python version $(python --version) running"
                echo "pip version $(pip --version) running"
